[
	{
		"format": "add(R#,to:R#)",
		"codex": "1000#1#2"
	},
	{
		"format": "shiftRight(on:R#)",
		"codex": "1001#1#1"
	},
	{
		"format": "shiftRight(R#,to:R#)",
		"codex": "1001#1#2"
	},
	{
		"format": "shiftLeft(on:R#)",
		"codex": "1010#1#1"
	},
	{
		"format": "shiftLeft(R#,to:R#)",
		"codex": "1010#1#2"
	},
	{
		"format": "not(on:R#)",
		"codex": "1011#1#1"
	},
	{
		"format": "not(R#,to:R#)",
		"codex": "1011#1#2"
	},
	{
		"format": "and(R#,to:R#)",
		"codex": "1100#1#2"
	},
	{
		"format": "or(R#,to:R#)",
		"codex": "1101#1#2"
	},
	{
		"format": "xor(R#,to:R#)",
		"codex": "1110#1#2"
	},
	{
		"format": "compare(R#,R#)",
		"codex": "1111#1#2"
	},
	{
		"format": "load(N#,to:R#)",
		"codex": "001000#2 #1"
	},
	{
		"format": "load(addressIn:R#,to:R#)",
		"codex": "0000#1#2"
	},
	{
		"format": "store(R#,toAddressIn:R#)",
		"codex": "0001#2#1"
	},
	{
		"format": "ioReadData(to:R#)",
		"codex": "011100#1"
	},
	{
		"format": "ioWriteData(in:R#)",
		"codex": "011110#1"
	},
	{
		"format": "ioUpdate",
		"codex": "01110100"
	},
	{
		"format": "ioSetAddress(in:R#)",
		"codex": "011111#1"
	},
	{
		"format": "jumpTo(@#)",
		"codex": "01000000 #1"
	},
	{
		"format": "jumpTo(address:N#)",
		"codex": "01000000 #1"
	},
	{
		"format": "jumpOnFlag(C:B#,A:B#,E:B#,Z:B#,to:@#)",
		"codex": "0101#1#2#3#4 #5"
	},
	{
		"format": "jumpTo(addressIn:R#)",
		"codex": "001100#1"
	},
	{
		"format": "zeroOut(R#)",
		"codex": "1110#1#1"
	},
	{
		"format": "clearFlag",
		"codex": "01100000"
	},
	{
		"format": "@tag(#)",
		"codex": ""
	}
]
